diff --git a/makefile_include.mk b/makefile_include.mk
index df51a12..2c62c6d 100644
--- a/makefile_include.mk
+++ b/makefile_include.mk
@@ -5,28 +5,27 @@
 #version of library
 VERSION=1.3.0
 VERSION_PC=1.3.0
-VERSION_SO=4:0:3
-
-PLATFORM := $(shell uname | sed -e 's/_.*//')
-
-# default make target
-default: ${LIBNAME}
+# https://semver.org/
+VERSION_MAJOR=1
+VERSION_MINOR=3
+VERSION_PATCH=0
+VERSION_LT=$(VERSION_MAJOR).$(VERSION_MINOR).$(VERSION_PATCH)
 
 # Compiler and Linker Names
 ifndef CROSS_COMPILE
   CROSS_COMPILE=
 endif
 
-# We only need to go through this dance of determining the right compiler if we're using
-# cross compilation, otherwise $(CC) is fine as-is.
+H := \#
+ifeq (CLANG,$(shell printf "$(H)ifdef __clang__\nCLANG\n$(H)endif\n" | $(CC) -E - | grep CLANG))
+  CC_IS_CLANG := 1
+else
+  CC_IS_CLANG := 0
+endif # Clang
+
 ifneq (,$(CROSS_COMPILE))
 ifeq ($(origin CC),default)
-CSTR := "\#ifdef __clang__\nCLANG\n\#endif\n"
-ifeq ($(PLATFORM),FreeBSD)
-  # XXX: FreeBSD needs extra escaping for some reason
-  CSTR := $$$(CSTR)
-endif
-ifneq (,$(shell echo $(CSTR) | $(CC) -E - | grep CLANG))
+ifeq ($(CC_IS_CLANG), 1)
   CC := $(CROSS_COMPILE)clang
 else
   CC := $(CROSS_COMPILE)gcc
@@ -88,7 +87,7 @@ endif
 
 endif # COMPILE_SIZE
 
-ifneq ($(findstring clang,$(CC)),)
+ifeq ($(CC_IS_CLANG), 1)
 LTM_CFLAGS += -Wno-typedef-redefinition -Wno-tautological-compare -Wno-builtin-requires-header
 endif
 ifneq ($(findstring mingw,$(CC)),)
@@ -97,16 +96,10 @@ endif
 ifeq ($(PLATFORM), Darwin)
 LTM_CFLAGS += -Wno-nullability-completeness
 endif
-ifeq ($(PLATFORM), CYGWIN)
-LIBTOOLFLAGS += -no-undefined
-endif
 
 # add in the standard FLAGS
-LTM_CFLAGS += $(CFLAGS)
-LTM_LFLAGS += $(LFLAGS)
-LTM_LDFLAGS += $(LDFLAGS)
-LTM_LIBTOOLFLAGS += $(LIBTOOLFLAGS)
-
+LTM_CFLAGS := $(LTM_CFLAGS) $(CFLAGS)
+LTM_LDFLAGS := $(LDFLAGS)
 
 ifeq ($(PLATFORM),FreeBSD)
   _ARCH := $(shell sysctl -b hw.machine_arch)
@@ -135,10 +128,11 @@ LIBPATH  ?= $(PREFIX)/lib
 INCPATH  ?= $(PREFIX)/include
 DATAPATH ?= $(PREFIX)/share/doc/libtommath/pdf
 
+library: $(LIBNAME)
+
 #make the code coverage of the library
 #
 coverage: LTM_CFLAGS += -fprofile-arcs -ftest-coverage -DTIMING_NO_LOGS
-coverage: LTM_LFLAGS += -lgcov
 coverage: LTM_LDFLAGS += -lgcov
 
 coverage: $(COVERAGE)
